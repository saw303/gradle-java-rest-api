plugins {
	id 'java-gradle-plugin'
	id 'maven-publish'
}

gradlePlugin {
	plugins {
		restapi {
			id = 'ch.silviowangler.restapi'
			implementationClass = 'ch.silviowangler.gradle.restapi.RestApiPlugin'
		}
	}
}

publishing {
	repositories {
		maven {
			name = "GitHubPackages"
			url = uri("https://maven.pkg.github.com/saw303/gradle-java-rest-api")
			credentials {
				username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
				password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
			}
		}
		maven {
			name = "Onstructive"
			url = uri(project.findProperty("artifactory_url"))
			credentials {
				username = project.findProperty("artifactory_user") ?: System.getenv("A_USERNAME")
				password = project.findProperty("artifactory_password") ?: System.getenv("A_TOKEN")
			}
		}
	}
}

group = 'ch.silviowangler.rest'

ext { pomDescription = 'Gradle plugin to generate REST APIs for JAX-RS or Spring-Boot projects' }

dependencies {

	implementation project(':json-model')
	implementation project(':rest-model')

	compileOnly gradleApi()
	testImplementation gradleTestKit()

	implementation "com.squareup:javapoet:${javaPoetVersion}"
	implementation "com.google.guava:guava:${guavaVersion}"
	implementation "com.google.code.gson:gson:${gsonVersion}"

	implementation 'net.sourceforge.plantuml:plantuml:1.2021.4'
	implementation 'org.apache.commons:commons-lang3:3.11'
}

task checkVersion(type: Test) {
	File file = file("${projectDir}/src/main/groovy/ch/silviowangler/gradle/restapi/RestApiPlugin.groovy")
	String content = file.text

	String msg = "Wrong version in ${file.absolutePath}"

	if (!content.contains("final String pluginVersion = \"${project.version}\"")) {
		throw new RuntimeException(msg)
	}

	if (!content.contains("implementation \"ch.silviowangler.rest:rest-api-spring:\${pluginVersion}\"")) {
		throw new RuntimeException(msg)
	}

	if (!content.contains("implementation \"ch.silviowangler.rest:rest-api-micronaut:\${pluginVersion}\"")) {
		throw new RuntimeException(msg)
	}
}
