package org.acme.rest.v1.laender;

import ch.silviowangler.rest.micronaut.ResponseCreator;
import ch.silviowangler.rest.types.IdType;
import io.micronaut.http.HttpResponse;
import io.micronaut.http.HttpStatus;
import io.micronaut.http.MediaType;
import io.micronaut.http.annotation.Body;
import io.micronaut.http.annotation.Controller;
import io.micronaut.http.annotation.Get;
import io.micronaut.http.annotation.Head;
import io.micronaut.http.annotation.Options;
import io.micronaut.http.annotation.Post;
import io.micronaut.http.annotation.Produces;
import io.micronaut.http.annotation.Put;
import io.micronaut.http.annotation.QueryValue;
import io.micronaut.http.annotation.Status;
import java.util.Collection;
import javax.annotation.Generated;
import javax.annotation.Nullable;
import javax.inject.Inject;
import javax.validation.Valid;

/**
 * Land
 */
@Generated(
    comments = "Specification filename: land.v1.json",
    value = "io.github.saw303.restapi"
)
@Controller("/v1/laender")
public class LandResource {
  public static final String OPTIONS_CONTENT = "{\"general\":{\"name\":\"land\",\"description\":\"Land\",\"version\":\"1.0.0\",\"lifecycle\":{\"deprecated\":false,\"info\":\"Diese Version ist noch immer gültig\"},\"searchable\":true,\"countable\":false,\"x-route\":\"/:version/laender/:entity\"},\"verbs\":[{\"verb\":\"GET_ENTITY\",\"rel\":\"Land laden\",\"responseStates\":[{\"code\":200,\"message\":\"200 Ok\",\"comment\":\"content in response body\"},{\"code\":503,\"message\":\"503 Service Unavailable\",\"comment\":\"Backend server eventually not reachable or to slow\"}],\"representations\":[{\"name\":\"json\",\"comment\":\"\",\"responseExample\":\"{...}\",\"isDefault\":true,\"mimetype\":\"application/ch.silviowangler.land\",\"raw\":true},{\"name\":\"pdf\",\"comment\":\"\",\"responseExample\":\"{...}\",\"isDefault\":false,\"mimetype\":\"application/pdf\"}],\"parameters\":[],\"permissions\":[],\"caching\":{\"no-cache\":true,\"private\":false,\"max-age\":-2,\"Expires\":-1,\"ETag\":true}},{\"verb\":\"GET_COLLECTION\",\"rel\":\"Länder holen\",\"collectionLimit\":19,\"maxCollectionLimit\":101,\"responseStates\":[{\"code\":200,\"message\":\"200 Ok\",\"comment\":\"content in response body\"},{\"code\":503,\"message\":\"503 Service Unavailable\",\"comment\":\"Backend server eventually not reachable or to slow\"}],\"representations\":[{\"name\":\"json\",\"comment\":\"\",\"responseExample\":\"{...}\",\"isDefault\":true,\"mimetype\":\"application/ch.silviowangler.land.collection\"},{\"name\":\"pdf\",\"comment\":\"\",\"responseExample\":\"{...}\",\"isDefault\":false,\"mimetype\":\"application/pdf\"}],\"permissions\":[],\"parameters\":[{\"name\":\"limit\",\"type\":\"int\",\"options\":null,\"mandatory\":false,\"min\":null,\"max\":null,\"multiple\":false,\"defaultValue\":10,\"x-comment\":\"limit result\"}]},{\"verb\":\"HEAD_ENTITY\",\"rel\":\"Land laden check\",\"responseStates\":[{\"code\":200,\"message\":\"200 Ok\",\"comment\":\"content in response body\"},{\"code\":503,\"message\":\"503 Service Unavailable\",\"comment\":\"Backend server eventually not reachable or to slow\"}],\"representations\":[{\"name\":\"json\",\"comment\":\"\",\"responseExample\":\"{...}\",\"isDefault\":true,\"mimetype\":\"application/ch.silviowangler.land\"},{\"name\":\"pdf\",\"comment\":\"\",\"responseExample\":\"{...}\",\"isDefault\":false,\"mimetype\":\"application/pdf\"}],\"parameters\":[],\"permissions\":[]},{\"verb\":\"HEAD_COLLECTION\",\"rel\":\"Länder holen check\",\"collectionLimit\":19,\"maxCollectionLimit\":101,\"responseStates\":[{\"code\":200,\"message\":\"200 Ok\",\"comment\":\"content in response body\"},{\"code\":503,\"message\":\"503 Service Unavailable\",\"comment\":\"Backend server eventually not reachable or to slow\"}],\"representations\":[{\"name\":\"json\",\"comment\":\"\",\"responseExample\":\"{...}\",\"isDefault\":true,\"mimetype\":\"application/ch.silviowangler.land.collection\"}],\"permissions\":[]},{\"verb\":\"PUT_ENTITY\",\"rel\":\"Land ändern\",\"responseStates\":[{\"code\":200,\"message\":\"200 Ok\",\"comment\":\"content in response body\"},{\"code\":503,\"message\":\"503 Service Unavailable\",\"comment\":\"Backend server eventually not reachable or to slow\"}],\"representations\":[{\"name\":\"json\",\"comment\":\"\",\"responseExample\":\"{...}\",\"isDefault\":true,\"mimetype\":\"application/json\"}],\"parameters\":[],\"permissions\":[{\"name\":\"mitarbeiter\",\"mode\":\"all\",\"comment\":\"Jeder darf ein Land ändern\"}]},{\"verb\":\"PUT_COLLECTION\",\"rel\":\"Land ändern\",\"responseStates\":[{\"code\":200,\"message\":\"200 Ok\",\"comment\":\"content in response body\"},{\"code\":503,\"message\":\"503 Service Unavailable\",\"comment\":\"Backend server eventually not reachable or to slow\"}],\"representations\":[{\"name\":\"json\",\"comment\":\"\",\"responseExample\":\"{...}\",\"isDefault\":true,\"mimetype\":\"application/json\"}],\"parameters\":[],\"permissions\":[{\"name\":\"mitarbeiter\",\"mode\":\"all\",\"comment\":\"Jeder darf ein Land ändern\"}]},{\"verb\":\"POST_ENTITY\",\"rel\":\"Land anlegen\",\"responseStates\":[{\"code\":200,\"message\":\"200 Ok\",\"comment\":\"content in response body\"},{\"code\":503,\"message\":\"503 Service Unavailable\",\"comment\":\"Backend server eventually not reachable or to slow\"}],\"representations\":[{\"name\":\"json\",\"comment\":\"\",\"responseExample\":\"{...}\",\"isDefault\":true,\"mimetype\":\"application/json\"}],\"parameters\":[],\"permissions\":[{\"name\":\"mitarbeiter\",\"mode\":\"all\",\"comment\":\"Jeder darf Länder ändern\"}]},{\"verb\":\"POST_COLLECTION\",\"rel\":\"Laender anlegen\",\"responseStates\":[{\"code\":200,\"message\":\"200 Ok\",\"comment\":\"content in response body\"},{\"code\":503,\"message\":\"503 Service Unavailable\",\"comment\":\"Backend server eventually not reachable or to slow\"}],\"representations\":[{\"name\":\"json\",\"comment\":\"\",\"responseExample\":\"{...}\",\"isDefault\":true,\"mimetype\":\"application/json\"}],\"parameters\":[],\"permissions\":[{\"name\":\"mitarbeiter\",\"mode\":\"all\",\"comment\":\"Jeder darf Länder ändern\"}]}],\"fields\":[{\"name\":\"id\",\"type\":\"uuid\",\"options\":null,\"mandatory\":[\"PUT_ENTITY\",\"PUT_COLLECTION\"],\"min\":null,\"max\":null,\"multiple\":false,\"defaultValue\":null,\"protected\":[],\"visible\":true,\"sortable\":false,\"readonly\":false,\"filterable\":false,\"alias\":[],\"x-comment\":\"VOKey\"},{\"name\":\"name\",\"type\":\"string\",\"options\":null,\"mandatory\":[\"PUT_ENTITY\",\"PUT_COLLECTION\",\"POST_ENTITY\",\"POST_COLLECTION\"],\"min\":0,\"max\":100,\"multiple\":false,\"defaultValue\":null,\"protected\":[],\"visible\":true,\"sortable\":false,\"readonly\":false,\"filterable\":false,\"alias\":[],\"x-comment\":\"Name des Landes\"},{\"name\":\"gruendungsDatum\",\"type\":\"date\",\"options\":null,\"mandatory\":[\"PUT_ENTITY\",\"PUT_COLLECTION\",\"POST_ENTITY\",\"POST_COLLECTION\"],\"min\":null,\"max\":null,\"multiple\":false,\"defaultValue\":null,\"protected\":[],\"visible\":true,\"sortable\":false,\"readonly\":false,\"filterable\":false,\"alias\":[],\"x-comment\":\"Wann wurde das Land gegründet?\"},{\"name\":\"flaeche\",\"type\":\"int\",\"options\":null,\"mandatory\":[\"PUT_ENTITY\",\"PUT_COLLECTION\",\"POST_ENTITY\",\"POST_COLLECTION\"],\"min\":1,\"max\":1200,\"multiple\":false,\"defaultValue\":null,\"protected\":[],\"visible\":true,\"sortable\":false,\"readonly\":false,\"filterable\":false,\"alias\":[],\"x-comment\":\"Fläche in km\"},{\"name\":\"koordinaten\",\"type\":\"coordinates\",\"options\":null,\"mandatory\":[\"PUT_ENTITY\",\"PUT_COLLECTION\",\"POST_ENTITY\",\"POST_COLLECTION\"],\"min\":null,\"max\":null,\"multiple\":false,\"defaultValue\":null,\"protected\":[],\"visible\":true,\"sortable\":false,\"readonly\":false,\"filterable\":false,\"alias\":[],\"x-comment\":\"Koordinaten\"}],\"subresources\":[{\"name\":\"land.ort\",\"type\":\"application/vnd.ch.silviowangler.ort.collection\",\"rel\":\"orte\",\"href\":\"/v1/laender/{:entity}/orte/\",\"method\":\"GET\",\"expandable\":true}]}";

  private final LandResourceDelegate delegate;

  @Inject
  public LandResource(LandResourceDelegate delegate) {
    this.delegate = delegate;
  }

  @Options
  @Produces("application/json; charset=UTF-8")
  public String getOptions() {
    return OPTIONS_CONTENT;
  }

  @Get
  @Produces("application/json; charset=UTF-8")
  public Iterable<LandGetResourceModel> getCollection(
      @Nullable @QueryValue(defaultValue = "10") Integer limit) {
    return delegate.getCollection(limit);
  }

  @Get(
      uri = "/.pdf"
  )
  @Produces("application/pdf")
  public HttpResponse getCollectionPdf(@Nullable @QueryValue(defaultValue = "10") Integer limit) {
    return delegate.getCollectionPdf(limit);
  }

  @Get(
      uri = "/{id}"
  )
  @Produces("application/json; charset=UTF-8")
  public HttpResponse getEntity(String id) {
    return delegate.getEntity(id);
  }

  @Get(
      uri = "/{id}.pdf"
  )
  @Produces("application/pdf")
  public HttpResponse getEntityPdf(String id) {
    return delegate.getEntityPdf(id);
  }

  @Head
  @Produces("application/json; charset=UTF-8")
  public HttpResponse headCollection() {
    return ResponseCreator.buildHeadResponse(this.getCollection(), MediaType.of("application/json; charset=UTF-8"));
  }

  @Head(
      uri = "/{id}"
  )
  @Produces("application/json; charset=UTF-8")
  public HttpResponse headEntity(String id) {
    return ResponseCreator.buildHeadResponse(this.getEntity(id), MediaType.of("application/json; charset=UTF-8"));
  }

  @Head(
      uri = "/{id}.pdf"
  )
  @Produces("application/pdf")
  public HttpResponse headEntityPdf(String id) {
    return ResponseCreator.buildHeadResponse(this.getEntity(id), MediaType.of("application/pdf"));
  }

  @Post
  @Produces("application/json; charset=UTF-8")
  public HttpResponse createCollection(@Valid @Body Collection<LandPostResourceModel> model) {
    return delegate.createCollection(model);
  }

  @Post
  @Produces("application/json; charset=UTF-8")
  @Status(HttpStatus.CREATED)
  public IdType createEntity(@Valid @Body LandPostResourceModel model) {
    return delegate.createEntity(model);
  }

  @Put
  @Produces("application/json; charset=UTF-8")
  public HttpResponse updateCollection(@Valid @Body Collection<LandPutResourceModel> model) {
    return delegate.updateCollection(model);
  }

  @Put(
      uri = "/{id}"
  )
  @Produces("application/json; charset=UTF-8")
  public IdType updateEntity(@Valid @Body LandPutResourceModel model, String id) {
    return delegate.updateEntity(model, id);
  }
}
