package org.acme.rest.v1.laender.orte;

import ch.silviowangler.rest.types.IdType;
import java.util.Collection;
import javax.annotation.Generated;
import javax.validation.Valid;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;

/**
 * Ort
 */
@Generated(
    comments = "Specification filename: land.ort.v1.json",
    value = "io.github.saw303.restapi"
)
@RequestMapping("/v1/laender/{land}/orte")
public abstract class OrtResource {
  public static final String OPTIONS_CONTENT = "{\"general\":{\"name\":\"land.ort\",\"description\":\"Ort\",\"version\":\"1.0.0\",\"lifecycle\":{\"deprecated\":false,\"info\":\"Diese Version ist noch immer gültig\"},\"searchable\":true,\"countable\":false,\"x-route\":\"/:version/laender/:land/orte/:entity\"},\"verbs\":[{\"verb\":\"GET_ENTITY\",\"rel\":\"Ort laden\",\"responseStates\":[{\"code\":200,\"message\":\"200 Ok\",\"comment\":\"content in response body\"},{\"code\":503,\"message\":\"503 Service Unavailable\",\"comment\":\"Backend server eventually not reachable or to slow\"}],\"representations\":[{\"name\":\"json\",\"comment\":\"\",\"responseExample\":\"{...}\",\"isDefault\":true,\"mimetype\":\"application/ch.silviowangler.ort\"},{\"name\":\"jpeg\",\"comment\":\"\",\"responseExample\":\"{...}\",\"isDefault\":true,\"mimetype\":\"image/jpeg\"}],\"options\":[],\"permissions\":[]},{\"verb\":\"GET_COLLECTION\",\"rel\":\"Orte holen\",\"collectionLimit\":19,\"maxCollectionLimit\":101,\"responseStates\":[{\"code\":200,\"message\":\"200 Ok\",\"comment\":\"content in response body\"},{\"code\":503,\"message\":\"503 Service Unavailable\",\"comment\":\"Backend server eventually not reachable or to slow\"}],\"representations\":[{\"name\":\"json\",\"comment\":\"\",\"responseExample\":\"{...}\",\"isDefault\":true,\"mimetype\":\"application/ch.silviowangler.ort.collection\"}],\"options\":[],\"permissions\":[]},{\"verb\":\"PUT\",\"rel\":\"Ort ändern\",\"responseStates\":[{\"code\":200,\"message\":\"200 Ok\",\"comment\":\"content in response body\"},{\"code\":503,\"message\":\"503 Service Unavailable\",\"comment\":\"Backend server eventually not reachable or to slow\"}],\"representations\":[{\"name\":\"json\",\"comment\":\"\",\"responseExample\":\"{...}\",\"isDefault\":true,\"mimetype\":\"application/json\"}],\"options\":[],\"permissions\":[]},{\"verb\":\"POST\",\"rel\":\"Ort ändern\",\"responseStates\":[{\"code\":200,\"message\":\"200 Ok\",\"comment\":\"content in response body\"},{\"code\":503,\"message\":\"503 Service Unavailable\",\"comment\":\"Backend server eventually not reachable or to slow\"}],\"representations\":[{\"name\":\"json\",\"comment\":\"\",\"responseExample\":\"{...}\",\"isDefault\":true,\"mimetype\":\"application/json\"}],\"options\":[],\"permissions\":[]},{\"verb\":\"DELETE_ENTITY\",\"rel\":\"Ort löschen\",\"responseStates\":[{\"code\":200,\"message\":\"200 Ok\",\"comment\":\"content in response body\"},{\"code\":503,\"message\":\"503 Service Unavailable\",\"comment\":\"Backend server eventually not reachable or to slow\"}],\"representations\":[{\"name\":\"json\",\"comment\":\"\",\"responseExample\":\"{...}\",\"isDefault\":true,\"mimetype\":\"application/json\"}],\"options\":[],\"permissions\":[]}],\"fields\":[{\"name\":\"id\",\"type\":\"uuid\",\"options\":null,\"mandatory\":[\"PUT\"],\"min\":null,\"max\":null,\"multiple\":false,\"defaultValue\":null,\"protected\":[],\"visible\":true,\"sortable\":false,\"readonly\":false,\"filterable\":false,\"alias\":[],\"x-comment\":\"VOKey\"},{\"name\":\"name\",\"type\":\"string\",\"options\":null,\"mandatory\":[\"PUT\",\"POST\"],\"min\":null,\"max\":20,\"multiple\":false,\"defaultValue\":null,\"protected\":[],\"visible\":true,\"sortable\":false,\"readonly\":false,\"filterable\":false,\"alias\":[],\"x-comment\":\"Ort\"},{\"name\":\"koordinaten\",\"type\":\"coordinates\",\"options\":null,\"mandatory\":[\"PUT\",\"POST\"],\"min\":null,\"max\":null,\"multiple\":false,\"defaultValue\":null,\"protected\":[],\"visible\":true,\"sortable\":false,\"readonly\":false,\"filterable\":false,\"alias\":[],\"x-comment\":\"Koordinaten\"}],\"parameters\":[],\"subresources\":[]}";

  @RequestMapping(
      method = RequestMethod.OPTIONS,
      produces = "application/json; charset=UTF-8"
  )
  @ResponseBody
  public String getOptions() {
    return OPTIONS_CONTENT;
  }

  public abstract ResponseEntity handleDeleteEntity(String id, String land);

  @RequestMapping(
      method = RequestMethod.DELETE,
      path = "/{id}",
      produces = "application/json; charset=UTF-8"
  )
  @ResponseBody
  @ResponseStatus(
      code = HttpStatus.NO_CONTENT
  )
  public ResponseEntity deleteEntity(@PathVariable("id") String id,
      @PathVariable("land") String land) {
    return handleDeleteEntity(id, land);
  }

  public abstract Collection<OrtGetResourceModel> handleGetCollection(String land);

  @RequestMapping(
      method = RequestMethod.GET,
      produces = "application/json; charset=UTF-8"
  )
  @ResponseBody
  public Collection<OrtGetResourceModel> getCollection(@PathVariable("land") String land) {
    return handleGetCollection(land);
  }

  public abstract OrtGetResourceModel handleGetEntity(String id, String land);

  @RequestMapping(
      method = RequestMethod.GET,
      path = "/{id}",
      produces = "application/json; charset=UTF-8"
  )
  @ResponseBody
  public OrtGetResourceModel getEntity(@PathVariable("id") String id,
      @PathVariable("land") String land) {
    return handleGetEntity(id, land);
  }

  public abstract ResponseEntity handleGetEntityJpeg(String id, String land);

  @RequestMapping(
      method = RequestMethod.GET,
      path = "/{id}.jpeg",
      produces = "image/jpeg"
  )
  public ResponseEntity getEntityJpeg(@PathVariable("id") String id,
      @PathVariable("land") String land) {
    return handleGetEntityJpeg(id, land);
  }

  public abstract IdType handleCreateEntity(OrtPostResourceModel model, String land);

  @RequestMapping(
      method = RequestMethod.POST,
      produces = "application/json; charset=UTF-8"
  )
  @ResponseBody
  @ResponseStatus(
      code = HttpStatus.CREATED
  )
  public IdType createEntity(@Valid @RequestBody OrtPostResourceModel model,
      @PathVariable("land") String land) {
    return handleCreateEntity(model, land);
  }

  public abstract IdType handleUpdateEntity(OrtPutResourceModel model, String id, String land);

  @RequestMapping(
      method = RequestMethod.PUT,
      path = "/{id}",
      produces = "application/json; charset=UTF-8"
  )
  @ResponseBody
  public IdType updateEntity(@Valid @RequestBody OrtPutResourceModel model,
      @PathVariable("id") String id, @PathVariable("land") String land) {
    return handleUpdateEntity(model, id, land);
  }

  @RequestMapping(
      method = RequestMethod.DELETE,
      produces = "application/json; charset=UTF-8"
  )
  @ResponseBody
  public ResponseEntity deleteCollectionAutoAnswer() {
    return new ResponseEntity<>(HttpStatus.METHOD_NOT_ALLOWED);
  }
}
