package org.acme.rest.v1.session.insurableperson.insuranceneeds.productproposal;

import ch.silviowangler.rest.types.IdType;
import java.util.Collection;
import javax.annotation.Generated;
import javax.validation.Valid;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;

/**
 * This resource generates the product proposal for the customer based on certain criteria like postcode/city, age and insurance needs
 */
@Generated(
    comments = "Specification filename: productproposal.v1.json",
    value = "io.github.saw303.restapi"
)
@RequestMapping("v1/session/insurableperson/insuranceneeds/productproposal")
public abstract class ProductproposalResource {
  public static final String OPTIONS_CONTENT = "{\"general\":{\"name\":\"productProposal.v1\",\"description\":\"This resource generates the product proposal for the customer based on certain criteria like postcode/city, age and insurance needs\",\"version\":\"1.0.0\",\"x-route\":\"v1/session/insurableperson/insuranceneeds/productproposal/:entity\",\"lifecycle\":{\"deprecated\":false,\"info\":\"This version is still valid\"}},\"verbs\":[{\"verb\":\"GET_COLLECTION\",\"rel\":\"collection\",\"responseStates\":[{\"code\":200,\"message\":\"200 Ok\",\"comment\":\"content in response body\"},{\"code\":503,\"message\":\"503 Service Unavailable\",\"comment\":\"Backend server not reachable or too slow\"}],\"representations\":[{\"name\":\"json\",\"comment\":\"\",\"responseExample\":\"{...}\",\"isDefault\":true,\"mimetype\":\"application/gesus.productproposal\"}],\"parameters\":[{\"name\":\"q\",\"type\":\"string\",\"options\":null,\"mandatory\":false,\"min\":null,\"max\":null,\"multiple\":false,\"defaultValue\":null,\"alias\":[],\"x-comment\":\"Search\"}],\"permissions\":[]},{\"verb\":\"POST\",\"rel\":\"add\",\"responseStates\":[{\"code\":200,\"message\":\"200 Ok\",\"comment\":\"content in response body\"},{\"code\":503,\"message\":\"503 Service Unavailable\",\"comment\":\"Backend server not reachable or too slow\"}],\"representations\":[{\"name\":\"json\",\"comment\":\"\",\"responseExample\":\"{...}\",\"isDefault\":true,\"mimetype\":\"application/gesus.productproposal\"}],\"parameters\":[],\"permissions\":[]},{\"verb\":\"PUT\",\"rel\":\"update\",\"responseStates\":[{\"code\":200,\"message\":\"200 Ok\",\"comment\":\"content in response body\"},{\"code\":503,\"message\":\"503 Service Unavailable\",\"comment\":\"Backend server not reachable or too slow\"}],\"representations\":[{\"name\":\"json\",\"comment\":\"\",\"responseExample\":\"{...}\",\"isDefault\":true,\"mimetype\":\"application/gesus.productproposal\"}],\"parameters\":[],\"permissions\":[]}],\"fields\":[{\"name\":\"proposal\",\"type\":\"proposal\",\"options\":null,\"mandatory\":[],\"min\":null,\"max\":null,\"multiple\":true,\"defaultValue\":null,\"protected\":[],\"visible\":true,\"sortable\":false,\"readonly\":false,\"filterable\":false,\"alias\":[],\"x-comment\":\"list-element for product proposal\"},{\"name\":\"premiumTotal\",\"type\":\"money\",\"options\":null,\"mandatory\":[],\"min\":null,\"max\":null,\"multiple\":false,\"defaultValue\":null,\"protected\":[],\"visible\":true,\"sortable\":false,\"readonly\":false,\"filterable\":false,\"alias\":[],\"x-comment\":\"premium total\"},{\"name\":\"addAnotherPersonSelected\",\"type\":\"bool\",\"options\":null,\"mandatory\":[\"POST\",\"PUT\"],\"min\":null,\"max\":null,\"multiple\":false,\"defaultValue\":null,\"protected\":[],\"visible\":true,\"sortable\":false,\"readonly\":false,\"filterable\":false,\"alias\":[],\"x-comment\":\"button 'add another person' pressed\"},{\"name\":\"nextButtonSelected\",\"type\":\"bool\",\"options\":null,\"mandatory\":[],\"min\":null,\"max\":null,\"multiple\":false,\"defaultValue\":null,\"protected\":[],\"visible\":true,\"sortable\":false,\"readonly\":true,\"filterable\":false,\"alias\":[],\"x-comment\":\"button 'next' pressed\"}],\"subresources\":[{\"name\":\"productselection.v1\",\"type\":\"application/vnd.com.gesus.productselection\",\"rel\":\"subresource\",\"href\":\"/v1/session/insurableperson/insuranceneeds/productproposal\",\"method\":\"GET\",\"expandable\":true}],\"pipes\":[],\"types\":[{\"name\":\"proposal\",\"fields\":[{\"name\":\"label\",\"type\":\"string\",\"options\":null,\"min\":null,\"max\":null,\"multiple\":false,\"defaultValue\":\"null\"},{\"name\":\"productid\",\"type\":\"uuid\",\"options\":null,\"min\":null,\"max\":null,\"multiple\":false,\"defaultValue\":null,\"x-comment\":\"product id\"},{\"name\":\"productPremium\",\"type\":\"money\",\"options\":null,\"min\":null,\"max\":null,\"multiple\":false,\"defaultValue\":null,\"x-comment\":\"product premium\"},{\"name\":\"productAttributes\",\"type\":\"string\",\"options\":null,\"min\":null,\"max\":null,\"multiple\":false,\"defaultValue\":null,\"x-comment\":\"set of attributes that are relevant for calculating the premium\"}]}],\"validators\":[]}";

  @RequestMapping(
      method = RequestMethod.OPTIONS,
      produces = "application/json"
  )
  @ResponseBody
  public String getOptions() {
    return OPTIONS_CONTENT;
  }

  public abstract Collection<ProductproposalGetResourceModel> handleGetCollection(String q);

  @RequestMapping(
      method = RequestMethod.GET,
      produces = "application/json"
  )
  @ResponseBody
  public Collection<ProductproposalGetResourceModel> getCollection(
      @RequestParam(value = "q", required = false) String q) {
    return handleGetCollection(q);
  }

  public abstract IdType handleCreateEntity(ProductproposalPostResourceModel model);

  @RequestMapping(
      method = RequestMethod.POST,
      produces = "application/json"
  )
  @ResponseBody
  @ResponseStatus(
      code = HttpStatus.CREATED
  )
  public IdType createEntity(@Valid @RequestBody ProductproposalPostResourceModel model) {
    return handleCreateEntity(model);
  }

  public abstract IdType handleUpdateEntity(ProductproposalPutResourceModel model, String id);

  @RequestMapping(
      method = RequestMethod.PUT,
      path = "/{id}",
      produces = "application/json"
  )
  @ResponseBody
  public IdType updateEntity(@Valid @RequestBody ProductproposalPutResourceModel model,
      @PathVariable("id") String id) {
    return handleUpdateEntity(model, id);
  }

  @RequestMapping(
      method = RequestMethod.DELETE,
      produces = "application/json"
  )
  @ResponseBody
  public ResponseEntity deleteCollectionAutoAnswer() {
    return new ResponseEntity<>(HttpStatus.METHOD_NOT_ALLOWED);
  }

  @RequestMapping(
      method = RequestMethod.DELETE,
      path = "/{id}",
      produces = "application/json"
  )
  @ResponseBody
  public ResponseEntity deleteEntityAutoAnswer(@PathVariable("id") String id) {
    return new ResponseEntity<>(HttpStatus.METHOD_NOT_ALLOWED);
  }

  @RequestMapping(
      method = RequestMethod.GET,
      path = "/{id}",
      produces = "application/json"
  )
  @ResponseBody
  public ResponseEntity getEntityAutoAnswer(@PathVariable("id") String id) {
    return new ResponseEntity<>(HttpStatus.METHOD_NOT_ALLOWED);
  }
}
