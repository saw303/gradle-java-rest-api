package org.acme.rest.v1.api.v1;

import java.util.Collection;
import javax.annotation.Generated;
import javax.validation.Valid;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 * This is the root resource of API version 1.0.0
 */
@Generated(
    comments = "Specification filename: root.v1.json",
    value = "io.github.saw303.restapi"
)
@RequestMapping("/api/v1")
public abstract class RootResource {
  public static final String OPTIONS_CONTENT = "{\"general\":{\"name\":\"root\",\"description\":\"This is the root resource of API version 1.0.0\",\"version\":\"1.0.0\",\"x-route\":\"/api/:version\"},\"verbs\":[{\"verb\":\"GET_ENTITY\",\"rel\":\"entity\",\"responseStates\":[{\"code\":200,\"message\":\"200 Ok\",\"comment\":\"content in response body\"},{\"code\":503,\"message\":\"503 Service Unavailable\",\"comment\":\"Backend server eventually not reachable or to slow\"}],\"representations\":[{\"name\":\"json\",\"comment\":\"\",\"responseExample\":\"{...}\",\"isDefault\":true,\"mimetype\":\"application/ch.silviowangler.root\"}],\"parameters\":[],\"permissions\":[{\"name\":\"user\",\"mode\":\"all\",\"comment\":\"Root Ressource of API Version 1\"}]},{\"verb\":\"PUT_COLLECTION\",\"rel\":\"collection\",\"responseStates\":[{\"code\":200,\"message\":\"200 Ok\",\"comment\":\"content in response body\"},{\"code\":503,\"message\":\"503 Service Unavailable\",\"comment\":\"Backend server eventually not reachable or to slow\"}],\"representations\":[{\"name\":\"json\",\"comment\":\"\",\"responseExample\":\"{...}\",\"isDefault\":true,\"mimetype\":\"application/ch.silviowangler.root\"}],\"parameters\":[],\"permissions\":[{\"name\":\"user\",\"mode\":\"all\",\"comment\":\"Root Ressource of API Version 1\"}]}],\"fields\":[{\"name\":\"id\",\"type\":\"uuid\",\"options\":null,\"mandatory\":[],\"min\":null,\"max\":null,\"multiple\":false,\"defaultValue\":null,\"protected\":[],\"visible\":true,\"sortable\":false,\"readonly\":false,\"filterable\":false,\"alias\":[],\"x-comment\":\"id\"},{\"name\":\"name\",\"type\":\"string\",\"options\":null,\"mandatory\":[],\"min\":null,\"max\":null,\"multiple\":false,\"defaultValue\":null,\"protected\":[],\"visible\":true,\"sortable\":false,\"readonly\":false,\"filterable\":false,\"alias\":[],\"x-comment\":\"Name\"},{\"name\":\"needGroups\",\"type\":\"insuranceNeedsGroup\",\"options\":null,\"mandatory\":[],\"min\":null,\"max\":null,\"multiple\":true,\"defaultValue\":null,\"protected\":[],\"visible\":true,\"sortable\":false,\"readonly\":false,\"filterable\":false,\"alias\":[]}],\"subresources\":[],\"types\":[{\"name\":\"need\",\"fields\":[{\"name\":\"id\",\"type\":\"uuid\",\"options\":null,\"min\":null,\"max\":null,\"multiple\":false,\"defaultValue\":\"null\"},{\"name\":\"labelKey\",\"type\":\"string\",\"options\":null,\"min\":null,\"max\":null,\"multiple\":false,\"defaultValue\":\"null\"}]},{\"name\":\"insuranceNeedsGroup\",\"fields\":[{\"name\":\"id\",\"type\":\"uuid\",\"options\":null,\"min\":null,\"max\":null,\"multiple\":false,\"defaultValue\":\"null\"},{\"name\":\"needs\",\"type\":\"need\",\"options\":null,\"min\":null,\"max\":null,\"multiple\":true,\"defaultValue\":\"null\"}]}]}";

  @RequestMapping(
      method = RequestMethod.OPTIONS,
      produces = "application/json"
  )
  @ResponseBody
  public String getOptions() {
    return OPTIONS_CONTENT;
  }

  public abstract RootGetResourceModel handleGetEntity();

  @RequestMapping(
      method = RequestMethod.GET,
      produces = "application/json"
  )
  @ResponseBody
  public RootGetResourceModel getEntity() {
    return handleGetEntity();
  }

  public abstract ResponseEntity handleUpdateCollection(Collection<RootPutResourceModel> model);

  @RequestMapping(
      method = RequestMethod.PUT,
      produces = "application/json"
  )
  @ResponseBody
  public ResponseEntity updateCollection(
      @Valid @RequestBody Collection<RootPutResourceModel> model) {
    return handleUpdateCollection(model);
  }

  @RequestMapping(
      method = RequestMethod.POST,
      produces = "application/json"
  )
  @ResponseBody
  public ResponseEntity createEntityAutoAnswer() {
    return new ResponseEntity<>(HttpStatus.METHOD_NOT_ALLOWED);
  }

  @RequestMapping(
      method = RequestMethod.DELETE,
      produces = "application/json"
  )
  @ResponseBody
  public ResponseEntity deleteCollectionAutoAnswer() {
    return new ResponseEntity<>(HttpStatus.METHOD_NOT_ALLOWED);
  }

  @RequestMapping(
      method = RequestMethod.DELETE,
      path = "/{id}",
      produces = "application/json"
  )
  @ResponseBody
  public ResponseEntity deleteEntityAutoAnswer(@PathVariable("id") String id) {
    return new ResponseEntity<>(HttpStatus.METHOD_NOT_ALLOWED);
  }
}
