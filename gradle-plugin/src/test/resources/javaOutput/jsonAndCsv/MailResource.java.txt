package org.acme.rest.v1.mail;

import io.micronaut.http.annotation.Controller;
import io.micronaut.http.annotation.Get;
import io.micronaut.http.annotation.Options;
import io.micronaut.http.annotation.Produces;
import javax.annotation.Generated;
import javax.inject.Inject;

@Generated(
    comments = "Specification filename: mail.json",
    value = "ch.silviowangler.restapi"
)
@Controller("/v1/mail")
public class MailResource {
  public static final String OPTIONS_CONTENT = "{\"general\":{\"name\":\"mail\",\"description\":\"Mail entry point\",\"version\":\"1.0.0\",\"x-route\":\"/v1/mail/:entity\",\"lifecycle\":{\"deprecated\":false,\"info\":\"This version is still valid\"}},\"verbs\":[{\"verb\":\"GET_ENTITY\",\"rel\":\"entity\",\"responseStates\":[{\"code\":200,\"message\":\"200 Ok\",\"comment\":\"content in response body\"},{\"code\":503,\"message\":\"503 Service Unavailable\",\"comment\":\"Backend server not reachable or too slow\"}],\"representations\":[{\"name\":\"json\",\"comment\":\"\",\"responseExample\":\"{...}\",\"isDefault\":true,\"mimetype\":\"application/json\"}],\"parameters\":[],\"permissions\":[]}],\"fields\":[{\"name\":\"id\",\"type\":\"string\",\"options\":null,\"mandatory\":[],\"min\":null,\"max\":null,\"multiple\":false,\"defaultValue\":null,\"protected\":[],\"visible\":true,\"sortable\":false,\"readonly\":false,\"filterable\":false,\"alias\":[],\"x-comment\":\"my custom id\"}],\"subresources\":[],\"pipes\":[],\"types\":[],\"validators\":[]}";

  private final MailResourceDelegate delegate;

  @Inject
  public MailResource(MailResourceDelegate delegate) {
    this.delegate = delegate;
  }

  @Options
  @Produces("application/json")
  public String getOptions() {
    return OPTIONS_CONTENT;
  }

  @Get(
      uri = "/{id}"
  )
  @Produces("application/json")
  public MailGetResourceModel getEntity(String id) {
    return delegate.getEntity(id);
  }
}
