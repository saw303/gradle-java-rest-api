package org.acme.rest.v1.download;

import javax.annotation.Generated;
import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.OPTIONS;
import javax.ws.rs.POST;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Response;

@Generated(
    comments = "Specification filename: download.v1.json",
    value = "ch.silviowangler.restapi"
)
@Path("/v1/download")
public interface DownloadResource {
  String OPTIONS_CONTENT = "{\"general\":{\"name\":\"download\",\"description\":\"Download entry point\",\"version\":\"1.0.0\",\"x-route\":\"/v1/download/:entity\",\"lifecycle\":{\"deprecated\":false,\"info\":\"This version is still valid\"}},\"verbs\":[{\"verb\":\"GET_ENTITY\",\"rel\":\"entity\",\"responseStates\":[{\"code\":200,\"message\":\"200 Ok\",\"comment\":\"content in response body\"},{\"code\":503,\"message\":\"503 Service Unavailable\",\"comment\":\"Backend server not reachable or too slow\"}],\"representations\":[{\"name\":\"csv\",\"comment\":\"\",\"responseExample\":\"{...}\",\"isDefault\":true,\"mimetype\":\"text/csv\"}],\"parameters\":[],\"permissions\":[]}],\"fields\":[],\"subresources\":[],\"pipes\":[],\"types\":[],\"validators\":[]}";

  @Produces({ "application/json" })
  @OPTIONS
  @Path("")
  default Response getOptions() {
    return Response.ok(OPTIONS_CONTENT).build();
  }

  @GET
  @Produces({ "text/csv" })
  @Path("{id}.csv")
  Response getEntityCsv(@PathParam("id") String id);

  @POST
  @Produces({ "application/json" })
  default Response createEntityAutoAnswer() {
    return Response.status(405).build();
  }

  @DELETE
  @Produces({ "application/json" })
  default Response deleteCollectionAutoAnswer() {
    return Response.status(405).build();
  }

  @DELETE
  @Produces({ "application/json" })
  @Path("{id}")
  default Response deleteEntityAutoAnswer(@PathParam("id") String id) {
    return Response.status(405).build();
  }

  @GET
  @Produces({ "application/json" })
  default Response getCollectionAutoAnswer() {
    return Response.status(405).build();
  }

  @PUT
  @Produces({ "application/json" })
  @Path("{id}")
  default Response updateEntityAutoAnswer(@PathParam("id") String id) {
    return Response.status(405).build();
  }
}
